/**
 * generated by Xtext 2.21.0
 */
package edu.upb.lp.isc.elErrorCosmicoDePaserj.impl;

import edu.upb.lp.isc.elErrorCosmicoDePaserj.*;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.impl.EFactoryImpl;

import org.eclipse.emf.ecore.plugin.EcorePlugin;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Factory</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class ElErrorCosmicoDePaserjFactoryImpl extends EFactoryImpl implements ElErrorCosmicoDePaserjFactory
{
  /**
   * Creates the default factory implementation.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static ElErrorCosmicoDePaserjFactory init()
  {
    try
    {
      ElErrorCosmicoDePaserjFactory theElErrorCosmicoDePaserjFactory = (ElErrorCosmicoDePaserjFactory)EPackage.Registry.INSTANCE.getEFactory(ElErrorCosmicoDePaserjPackage.eNS_URI);
      if (theElErrorCosmicoDePaserjFactory != null)
      {
        return theElErrorCosmicoDePaserjFactory;
      }
    }
    catch (Exception exception)
    {
      EcorePlugin.INSTANCE.log(exception);
    }
    return new ElErrorCosmicoDePaserjFactoryImpl();
  }

  /**
   * Creates an instance of the factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ElErrorCosmicoDePaserjFactoryImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EObject create(EClass eClass)
  {
    switch (eClass.getClassifierID())
    {
      case ElErrorCosmicoDePaserjPackage.MY_RACKET_PROGRAM: return createMyRacketProgram();
      case ElErrorCosmicoDePaserjPackage.DEFINE: return createDefine();
      case ElErrorCosmicoDePaserjPackage.EXPRESSION: return createExpression();
      case ElErrorCosmicoDePaserjPackage.SIMPLE_EXPRESSION: return createSimpleExpression();
      case ElErrorCosmicoDePaserjPackage.INT_EXPRESSION: return createIntExpression();
      case ElErrorCosmicoDePaserjPackage.ARITH_EXPRESSION: return createArithExpression();
      case ElErrorCosmicoDePaserjPackage.IF_EXPRESSION: return createIfExpression();
      case ElErrorCosmicoDePaserjPackage.FUNCTION_CALL_EXPRESSION: return createFunctionCallExpression();
      case ElErrorCosmicoDePaserjPackage.STRING_EXPRESSION: return createStringExpression();
      case ElErrorCosmicoDePaserjPackage.PARAMS_EXPRESSION: return createParamsExpression();
      case ElErrorCosmicoDePaserjPackage.PARAMS_CALL_EXPRESSION: return createParamsCallExpression();
      case ElErrorCosmicoDePaserjPackage.BOOLEAN_EXPRESSION: return createBooleanExpression();
      case ElErrorCosmicoDePaserjPackage.BOOLEAN_CONSTANT: return createBooleanConstant();
      case ElErrorCosmicoDePaserjPackage.BOOLEAN_OP_EXPRESSION: return createBooleanOpExpression();
      case ElErrorCosmicoDePaserjPackage.COMPARISON_EXPRESSION: return createComparisonExpression();
      case ElErrorCosmicoDePaserjPackage.STRING_EQUALS_EXPRESSION: return createStringEqualsExpression();
      case ElErrorCosmicoDePaserjPackage.LIST_IS_EMPTY_EXPRESSION: return createListIsEmptyExpression();
      case ElErrorCosmicoDePaserjPackage.LIST_EXPRESSION: return createListExpression();
      case ElErrorCosmicoDePaserjPackage.SIMPLE_LIST: return createSimpleList();
      case ElErrorCosmicoDePaserjPackage.LINKED_LIST: return createLinkedList();
      case ElErrorCosmicoDePaserjPackage.LIST_OPERATION_EXPRESSION: return createListOperationExpression();
      case ElErrorCosmicoDePaserjPackage.LIST_HEAD_OP: return createListHeadOp();
      case ElErrorCosmicoDePaserjPackage.LIST_TAIL_OP: return createListTailOp();
      case ElErrorCosmicoDePaserjPackage.LIST_CONS_OP: return createListConsOp();
      case ElErrorCosmicoDePaserjPackage.LIST_LENGTH_OP: return createListLengthOp();
      default:
        throw new IllegalArgumentException("The class '" + eClass.getName() + "' is not a valid classifier");
    }
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public MyRacketProgram createMyRacketProgram()
  {
    MyRacketProgramImpl myRacketProgram = new MyRacketProgramImpl();
    return myRacketProgram;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Define createDefine()
  {
    DefineImpl define = new DefineImpl();
    return define;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Expression createExpression()
  {
    ExpressionImpl expression = new ExpressionImpl();
    return expression;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public SimpleExpression createSimpleExpression()
  {
    SimpleExpressionImpl simpleExpression = new SimpleExpressionImpl();
    return simpleExpression;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public IntExpression createIntExpression()
  {
    IntExpressionImpl intExpression = new IntExpressionImpl();
    return intExpression;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ArithExpression createArithExpression()
  {
    ArithExpressionImpl arithExpression = new ArithExpressionImpl();
    return arithExpression;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public IfExpression createIfExpression()
  {
    IfExpressionImpl ifExpression = new IfExpressionImpl();
    return ifExpression;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public FunctionCallExpression createFunctionCallExpression()
  {
    FunctionCallExpressionImpl functionCallExpression = new FunctionCallExpressionImpl();
    return functionCallExpression;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public StringExpression createStringExpression()
  {
    StringExpressionImpl stringExpression = new StringExpressionImpl();
    return stringExpression;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ParamsExpression createParamsExpression()
  {
    ParamsExpressionImpl paramsExpression = new ParamsExpressionImpl();
    return paramsExpression;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ParamsCallExpression createParamsCallExpression()
  {
    ParamsCallExpressionImpl paramsCallExpression = new ParamsCallExpressionImpl();
    return paramsCallExpression;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public BooleanExpression createBooleanExpression()
  {
    BooleanExpressionImpl booleanExpression = new BooleanExpressionImpl();
    return booleanExpression;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public BooleanConstant createBooleanConstant()
  {
    BooleanConstantImpl booleanConstant = new BooleanConstantImpl();
    return booleanConstant;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public BooleanOpExpression createBooleanOpExpression()
  {
    BooleanOpExpressionImpl booleanOpExpression = new BooleanOpExpressionImpl();
    return booleanOpExpression;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ComparisonExpression createComparisonExpression()
  {
    ComparisonExpressionImpl comparisonExpression = new ComparisonExpressionImpl();
    return comparisonExpression;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public StringEqualsExpression createStringEqualsExpression()
  {
    StringEqualsExpressionImpl stringEqualsExpression = new StringEqualsExpressionImpl();
    return stringEqualsExpression;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ListIsEmptyExpression createListIsEmptyExpression()
  {
    ListIsEmptyExpressionImpl listIsEmptyExpression = new ListIsEmptyExpressionImpl();
    return listIsEmptyExpression;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ListExpression createListExpression()
  {
    ListExpressionImpl listExpression = new ListExpressionImpl();
    return listExpression;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public SimpleList createSimpleList()
  {
    SimpleListImpl simpleList = new SimpleListImpl();
    return simpleList;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public LinkedList createLinkedList()
  {
    LinkedListImpl linkedList = new LinkedListImpl();
    return linkedList;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ListOperationExpression createListOperationExpression()
  {
    ListOperationExpressionImpl listOperationExpression = new ListOperationExpressionImpl();
    return listOperationExpression;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ListHeadOp createListHeadOp()
  {
    ListHeadOpImpl listHeadOp = new ListHeadOpImpl();
    return listHeadOp;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ListTailOp createListTailOp()
  {
    ListTailOpImpl listTailOp = new ListTailOpImpl();
    return listTailOp;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ListConsOp createListConsOp()
  {
    ListConsOpImpl listConsOp = new ListConsOpImpl();
    return listConsOp;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ListLengthOp createListLengthOp()
  {
    ListLengthOpImpl listLengthOp = new ListLengthOpImpl();
    return listLengthOp;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ElErrorCosmicoDePaserjPackage getElErrorCosmicoDePaserjPackage()
  {
    return (ElErrorCosmicoDePaserjPackage)getEPackage();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @deprecated
   * @generated
   */
  @Deprecated
  public static ElErrorCosmicoDePaserjPackage getPackage()
  {
    return ElErrorCosmicoDePaserjPackage.eINSTANCE;
  }

} //ElErrorCosmicoDePaserjFactoryImpl
