/**
 * generated by Xtext 2.21.0
 */
package edu.upb.lp.isc.myRacket.impl;

import edu.upb.lp.isc.myRacket.*;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.impl.EFactoryImpl;

import org.eclipse.emf.ecore.plugin.EcorePlugin;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Factory</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class MyRacketFactoryImpl extends EFactoryImpl implements MyRacketFactory
{
  /**
   * Creates the default factory implementation.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static MyRacketFactory init()
  {
    try
    {
      MyRacketFactory theMyRacketFactory = (MyRacketFactory)EPackage.Registry.INSTANCE.getEFactory(MyRacketPackage.eNS_URI);
      if (theMyRacketFactory != null)
      {
        return theMyRacketFactory;
      }
    }
    catch (Exception exception)
    {
      EcorePlugin.INSTANCE.log(exception);
    }
    return new MyRacketFactoryImpl();
  }

  /**
   * Creates an instance of the factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public MyRacketFactoryImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EObject create(EClass eClass)
  {
    switch (eClass.getClassifierID())
    {
      case MyRacketPackage.MY_RACKET_PROGRAM: return createMyRacketProgram();
      case MyRacketPackage.DEFINE: return createDefine();
      default:
        throw new IllegalArgumentException("The class '" + eClass.getName() + "' is not a valid classifier");
    }
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public MyRacketProgram createMyRacketProgram()
  {
    MyRacketProgramImpl myRacketProgram = new MyRacketProgramImpl();
    return myRacketProgram;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Define createDefine()
  {
    DefineImpl define = new DefineImpl();
    return define;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public MyRacketPackage getMyRacketPackage()
  {
    return (MyRacketPackage)getEPackage();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @deprecated
   * @generated
   */
  @Deprecated
  public static MyRacketPackage getPackage()
  {
    return MyRacketPackage.eINSTANCE;
  }

} //MyRacketFactoryImpl
